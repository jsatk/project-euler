'use strict'

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */

// Utility
const sumOfArr = arr => arr.reduce((sum, n) => sum + n, 0)
const sumEndsOfArr = arr => arr[arr.length - 1] + arr[arr.length - 2]

// Predicates
const isMultipleOfN = n => num => num % n === 0
const isEven = isMultipleOfN(2)

// Problem-specific functions
const getFibonacciBelowN = (limit, fibonacci = [1, 2]) => {
  const atLimit = fibonacci[fibonacci.length - 1] >= limit
  if (atLimit) return fibonacci
  return getFibonacciBelowN(limit, fibonacci.concat([sumEndsOfArr(fibonacci)]))
}

const fibonacci = getFibonacciBelowN(4e+6)
const evens = fibonacci.filter(isEven)
const sumOfEvens = sumOfArr(evens)

console.log(sumOfEvens)
